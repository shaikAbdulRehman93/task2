# -*- coding: utf-8 -*-
"""task2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1p3t2qbuvjx9RXHVuYgiL3Hix9cx4gJIB
"""

# Import necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score

# Sample Data (you can replace this with a CSV from Kaggle)
data = {
    'Month': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
    'Ad_Spend': [10000, 15000, 20000, 25000, 30000, 35000, 32000, 30000, 28000, 26000, 24000, 22000],
    'Sales':    [15000, 20000, 25000, 30000, 35000, 40000, 37000, 35000, 33000, 31000, 29000, 27000]
}
df = pd.DataFrame(data)

# Display the data
print("ðŸ“Š Dataset:")
print(df)

# Define features and labels
X = df[['Ad_Spend']]  # Feature
y = df['Sales']       # Target

# Split into training and testing datasets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)

# Train Linear Regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions
y_pred = model.predict(X_test)

# Model Evaluation
print("\nâœ… Model Evaluation Metrics:")
print("Mean Absolute Error (MAE):", mean_absolute_error(y_test, y_pred))
print("Mean Squared Error (MSE):", mean_squared_error(y_test, y_pred))
print("Root Mean Squared Error (RMSE):", np.sqrt(mean_squared_error(y_test, y_pred)))
print("R-squared (RÂ²):", r2_score(y_test, y_pred))

# Predict future sales
future_spend = pd.DataFrame({'Ad_Spend': [40000, 45000, 50000]})
future_sales = model.predict(future_spend)
print("\nðŸ“ˆ Future Sales Predictions:")
print(pd.DataFrame({'Ad_Spend': future_spend['Ad_Spend'], 'Predicted Sales': future_sales.astype(int)}))

# Plotting the regression line
plt.scatter(X, y, color='blue', label='Actual Sales')
plt.plot(X, model.predict(X), color='red', linewidth=2, label='Predicted Line')
plt.title("Advertising Spend vs Sales")
plt.xlabel("Ad Spend (â‚¹)")
plt.ylabel("Sales (â‚¹)")
plt.legend()
plt.grid(True)
plt.show()